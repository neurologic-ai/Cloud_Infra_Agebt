{
  "metrics": {
    "score_storage_efficiency": {
      "metric_id": "storage.efficiency",
      "category": "efficiency",
      "platform": "aws",
      "score": 3.0,
      "confidence": 0.8,
      "rationale": "There is one unattached block volume and one orphaned snapshot, indicating noticeable but not severe waste. The object storage contains items that are not stale but may require lifecycle management.",
      "findings": [],
      "evidence_refs": []
    },
    "score_commitment_coverage": {
      "metric_id": "cost.commit_coverage",
      "category": "cost",
      "platform": "aws",
      "score": 3.0,
      "confidence": 0.8,
      "rationale": "Coverage is approximately 78% with 12% unused commitments, indicating clear risks to address.",
      "findings": [],
      "evidence_refs": []
    },
    "score_compute_utilization": {
      "metric_id": "compute.utilization",
      "category": "efficiency",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.8,
      "rationale": "Less than 30% of instances are operating within the optimal CPU/memory utilization range, indicating a significant failure in resource management. The majority of the fleet is largely idle, necessitating urgent action to address the inefficiencies.",
      "findings": [],
      "evidence_refs": []
    },
    "score_lb_performance": {
      "metric_id": "lb.performance",
      "category": "reliability",
      "platform": "aws",
      "score": 4.0,
      "confidence": 0.85,
      "rationale": "Latency metrics are near SLO thresholds with minor spikes, and 5xx error rates are rare. The unhealthy time is minimal, indicating good overall performance.",
      "findings": [],
      "evidence_refs": []
    },
    "score_k8s_utilization": {
      "metric_id": "k8s.utilization",
      "category": "efficiency",
      "platform": "aws",
      "score": 3.0,
      "confidence": 0.7,
      "rationale": "The binpack efficiency is at 0.74, which is acceptable but indicates some fragmentation. Additionally, the pending pods count is at 3, which is on the higher side and suggests a need for attention.",
      "findings": [],
      "evidence_refs": []
    },
    "score_db_utilization": {
      "metric_id": "db.utilization",
      "category": "efficiency",
      "platform": "aws",
      "score": 2.0,
      "confidence": 0.75,
      "rationale": "The database 'azure-sql-1' shows critical underutilization with a CPU p95 of 0.12, indicating a significant failure in resource allocation. In contrast, 'rds-a' is within acceptable limits, but the overall fleet is skewed due to the poor performance of 'azure-sql-1'.",
      "findings": [],
      "evidence_refs": []
    },
    "score_availability_incidents": {
      "metric_id": "availability.incidents",
      "category": "reliability",
      "platform": "aws",
      "score": 2.0,
      "confidence": 0.75,
      "rationale": "There is one critical incident (Sev1) and one major incident (Sev2) with a total MTTR of 1 hour and 5 minutes. Additionally, there are SLO breaches totaling 2.4 hours, indicating material risks to service reliability.",
      "findings": [],
      "evidence_refs": []
    },
    "score_tagging_coverage": {
      "metric_id": "tagging.coverage",
      "category": "efficiency",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.5,
      "rationale": "Less than 50% of resources are fully tagged, and critical tags are absent on more than 25% of production resources, indicating a significant failure in tagging compliance.",
      "findings": [],
      "evidence_refs": []
    },
    "score_security_encryption": {
      "metric_id": "security.encryption",
      "category": "security",
      "platform": "aws",
      "score": 5.0,
      "confidence": 1.0,
      "rationale": "All resources are encrypted at rest and utilize a modern TLS policy, indicating no material risks.",
      "findings": [],
      "evidence_refs": []
    },
    "score_iac_coverage_drift": {
      "metric_id": "iac.coverage_drift",
      "category": "efficiency",
      "platform": "aws",
      "score": 2.0,
      "confidence": 0.7,
      "rationale": "Only 66.67% of resources are managed by IaC, and there are multiple high/critical severity policy findings indicating material risks.",
      "findings": [],
      "evidence_refs": []
    },
    "score_security_iam": {
      "metric_id": "security.iam_risk",
      "category": "security",
      "platform": "aws",
      "score": 2.0,
      "confidence": 0.75,
      "rationale": "There are users without MFA and an access key that exceeds the recommended age, along with a wildcard admin policy, indicating material risks.",
      "findings": [],
      "evidence_refs": []
    },
    "score_security_public_exposure": {
      "metric_id": "security.public_exposure",
      "category": "security",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.9,
      "rationale": "There is a critical exposure risk due to public SSH access (0.0.0.0/0:22) and a publicly accessible bucket (ml-prod). Additionally, the asset (i-9zzz) has a public IP, which further exacerbates the risk, especially if it handles sensitive data.",
      "findings": [],
      "evidence_refs": []
    },
    "score_security_vuln_patch": {
      "metric_id": "security.vuln_patch",
      "category": "security",
      "platform": "aws",
      "score": 2.0,
      "confidence": 0.85,
      "rationale": "There is one critical vulnerability open, and the average patch age exceeds the target threshold. Additionally, while agent coverage is good, it does not fully mitigate the risks posed by the critical finding.",
      "findings": [],
      "evidence_refs": []
    },
    "score_cost_allocation_quality": {
      "metric_id": "tagging.coverage",
      "category": "cost",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.5,
      "rationale": "Less than 50% of resources are fully tagged, indicating a significant failure in tagging compliance. Critical tags are absent on more than 25% of production resources, which exacerbates the issue.",
      "findings": [],
      "evidence_refs": []
    },
    "score_cost_idle_underutilized": {
      "metric_id": "cost.idle_underutilized",
      "category": "cost",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.8,
      "rationale": "A significant portion of the instances are underutilized, with less than 30% operating efficiently. This indicates a critical failure in resource management, leading to excessive idle costs.",
      "findings": [],
      "evidence_refs": []
    },
    "score_autoscaling_effectiveness": {
      "metric_id": "compute.utilization",
      "category": "efficiency",
      "platform": "aws",
      "score": 1.0,
      "confidence": 0.8,
      "rationale": "The utilization metrics indicate a significant failure in resource management, with less than 30% of instances operating efficiently. Immediate action is required to address the inefficiencies and improve overall performance.",
      "findings": [],
      "evidence_refs": []
    }
  },
  "summary": {
    "overall_score": 2.128,
    "category_scores": {
      "cost": 1.6800000000000002,
      "efficiency": 1.98,
      "reliability": 2.8,
      "security": 2.5
    },
    "breakdown": [
      {
        "name": "cost",
        "weight": 0.35,
        "effective_weight_sum": 1.0,
        "metrics": [
          {
            "metric": "score_commitment_coverage",
            "weight": 0.34,
            "score": 3.0
          },
          {
            "metric": "score_cost_allocation_quality",
            "weight": 0.33,
            "score": 1.0
          },
          {
            "metric": "score_cost_idle_underutilized",
            "weight": 0.33,
            "score": 1.0
          }
        ]
      },
      {
        "name": "efficiency",
        "weight": 0.25,
        "effective_weight_sum": 1.0,
        "metrics": [
          {
            "metric": "score_compute_utilization",
            "weight": 0.22,
            "score": 1.0
          },
          {
            "metric": "score_k8s_utilization",
            "weight": 0.22,
            "score": 3.0
          },
          {
            "metric": "score_db_utilization",
            "weight": 0.18,
            "score": 2.0
          },
          {
            "metric": "score_storage_efficiency",
            "weight": 0.18,
            "score": 3.0
          },
          {
            "metric": "score_autoscaling_effectiveness",
            "weight": 0.2,
            "score": 1.0
          }
        ]
      },
      {
        "name": "reliability",
        "weight": 0.15,
        "effective_weight_sum": 1.0,
        "metrics": [
          {
            "metric": "score_availability_incidents",
            "weight": 0.6,
            "score": 2.0
          },
          {
            "metric": "score_lb_performance",
            "weight": 0.4,
            "score": 4.0
          }
        ]
      },
      {
        "name": "security",
        "weight": 0.25,
        "effective_weight_sum": 1.0,
        "metrics": [
          {
            "metric": "score_security_encryption",
            "weight": 0.25,
            "score": 5.0
          },
          {
            "metric": "score_security_iam",
            "weight": 0.25,
            "score": 2.0
          },
          {
            "metric": "score_security_public_exposure",
            "weight": 0.25,
            "score": 1.0
          },
          {
            "metric": "score_security_vuln_patch",
            "weight": 0.25,
            "score": 2.0
          }
        ]
      }
    ],
    "simple_average_debug": 2.125,
    "count_metrics": 16,
    "scored_metrics": 16
  }
}